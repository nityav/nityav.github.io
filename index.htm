<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>TWITCH </title>
    <!-- Bootstrap -->
    <!--[if lt IE 9]>
	<script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
	<![endif]-->
    <link href="css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <div class="navbar navbar-fixed-top navbar-inverse" role="navigation">
        <div class="container">
            <div class="navbar-header heading">
                <h1>TWITCH</h1>
            </div>
        </div>
        <!-- /.container  -->
    </div>
    <!-- /.navbar -->
   
    <div class="container">
        <div class="row row-offcanvas row-offcanvas-right">
            <div class="col-xs-12 col-sm-12 col-lg-12 jumbotron">
                <div class="form-group col-lg-11 col-sm-6 col-xs-8">
                    <input type="text" class="form-control" id="query" style="color: #888;" value="Search Query"
                        onfocus="inputFocus(this)" onblur="inputBlur(this)" />
                        
                </div>
                <input class="btn btn-primary col-lg-1" type="button" id="search" value="Search"  onclick="search()" />
                
                
                <div id="loading" class="col-xs-12 col-sm-12 col-lg-12 jumbotron" style="display: none">
    Loading! Please wait...
</div>
                <div id="content" style="display: block">
                <div class="row col-xs-12 col-sm-12 col-lg-12">
                    <div id="Summary" style="display:none">
                        <div class="pull-left">
                            Total results :<span id="total"></span></div>
                        <div id="pagination" class="pull-right">
                            <img src="images/arrow-left.png" id="arrow-left" class="cursor" title="Previous" onclick="prev()" />
                            <span id="pageNumber"></span>
                            <img src="images/arrow-right.png" id="arrow-right" class="cursor" title="Next" onclick="next()" />
                        </div>
                    </div>
                </div>
                <!--/row-->
                <div id="error" class="row col-xs-12 col-sm-12 col-lg-12 text-warning">
                </div>
                <div id="results" class="row col-xs-12 col-sm-12 col-lg-12">
                </div>

                </div>

            </div>
            <!--/span-->
        </div>
        <!--/row-->
        <hr />
    </div>
</body>
 <!--<script type="text/javascript" src="js/twitch.js"></script>-->
 <script type="text/javascript">

     function getJSONPTwitch(url, success) {

         var ud = '_' + +new Date,
					script = document.createElement('script'),
					head = document.getElementsByTagName('head')[0]
							|| document.documentElement;

         window[ud] = function (data) {
             head.removeChild(script);
             success && success(data);
         };

         script.src = url.replace('callback=?', 'callback=' + ud);
         head.appendChild(script);

     }



     function search() {
         key = document.getElementById('query').value;
         Twitch.counter = 1;
         //checking if a key value is empty or default
         if (key == "Search Query") {
             alert('Please enter something');
             document.getElementById('query').focus();
             return false; // cancel submission and go back to the textbox
         }

         else {
             document.getElementById("loading").style.display = "block";
             document.getElementById("content").style.display = "none";
             document.getElementById("error").innerHTML = "";
             document.getElementById("Summary").style.display = 'none';
             var url = 'https://api.twitch.tv/kraken/search/streams?q=' + key + '&limit=10&callback=?';
             // calling the twitch API
             getJSONPTwitch(url, function (data) {  myobj = new Twitch(data); });
           
            
                
         }
     }


     function Twitch(data) {

         this.data = data;
         this.page = Math.ceil(this.data._total / 10);
         this.tshowResults();

     }

     Twitch.counter = 1;

     Twitch.prototype.tnext = function () {
         document.getElementById("loading").style.display = "block";
         document.getElementById("content").style.display = "none";
         document.getElementById("error").innerHTML = "";
         if (Twitch.counter < this.page) {
             var url = this.data._links.next + '&callback=?';
             ++Twitch.counter; // updating counter to update the page number
             getJSONPTwitch(url, function (data) { myobj = new Twitch(data); });


         }
         else {
             document.getElementById("error").innerHTML = "<p class='bg-warning'><h3> You have reached the end.No more results!</h3></p>";
             document.getElementById("loading").style.display = "none";
             document.getElementById("content").style.display = "block";
         }

         
     };

     Twitch.prototype.tprev = function () {
         document.getElementById("loading").style.display = "block";
         document.getElementById("content").style.display = "none";
         document.getElementById("error").innerHTML = "";
         if (Twitch.counter > 1) {
             --Twitch.counter; // updating counter to set offset
             var url = this.data._links.prev + '&callback=?'
             getJSONPTwitch(url, function (data) { myobj = new Twitch(data); });
            
         }
         else {
             document.getElementById("error").innerHTML = "<p class='bg-warning'><h3> You are on page 1.No Previous results</h3></p>";
             document.getElementById("loading").style.display = "none";
             document.getElementById("content").style.display = "block";

         }
        
     };

     Twitch.prototype.tshowResults = function () {
        
         if (this.data.streams.length > 0) {
             var output = '';
             for (var result = 0; result < this.data.streams.length; result++) {
                 output += "<div class=\"col-xs-12 col-sm-12 col-lg-12 stream\"><img class=\"img-Stream img-responsive\" src=\"" + this.data.streams[result].preview.medium + "\"></img><div float=\"right\"><h3>" + this.data.streams[result].game + "</h3> Game Name:" + this.data.streams[result].channel.game + " - " + this.data.streams[result].viewers + " Viewers<br/>Stream Description: " + this.data.streams[result].channel.status + "</div></div>";
             }
             document.getElementById("results").innerHTML = output;  //print result
             document.getElementById('total').innerHTML = this.data._total; // in a lot of cases i have observed the total changes so checking it with each call
             document.getElementById("pageNumber").innerHTML = Twitch.counter + "/" + this.page; // update the page number
             document.getElementById("Summary").style.display = 'block'; // show summary
             document.getElementById("loading").style.display = "none"; //remove loading
             document.getElementById("content").style.display = "block"; //show results
         }
         else {

             document.getElementById("loading").style.display = "none";
             document.getElementById("content").style.display = "block";
             document.getElementById("results").innerHTML = "<h3> No results returned! Please try again.</h3>";
         }
     }; 
         

     function inputFocus(i) {
         if (i.value == i.defaultValue) {
             i.value = "";  // empty default value 
             i.style.color = "#000"; // change the color to black
         }
     }
     function inputBlur(i) {
         if (i.value == "") {
             i.value = i.defaultValue; // update the value to default value 
             i.style.color = "#888"; // change the color to gray
         }
     }

     function next() {
         myobj.tnext();
     }

     function prev() {
         myobj.tprev();
     }



 </script>
 
    <link href="css/Twitch.css" rel="stylesheet" />
</html>
